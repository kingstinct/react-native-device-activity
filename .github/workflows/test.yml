# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Test

on:
  push:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn

      - run: yarn install
      
      - run: yarn lint
  
  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn

      - run: yarn install
      
      - run: yarn typecheck

  typecheck-example:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn

      - run: yarn install

      - run: npm install
        working-directory: example
      - run: yarn typecheck
        working-directory: example

  swift-lint:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: example/package-lock.json

      - uses: actions/cache@v4
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - run: yarn install
      
      - run: npm install
        working-directory: example
      
      - run: pod install
        working-directory: example/ios
      
      - run: example/ios/Pods/SwiftLint/swiftlint lint

  swift-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: yarn

      - run: yarn install

      - uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: example/package-lock.json

      - uses: actions/cache@v4
        with:
          path: example/ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: List available Xcode versions
        run: ls /Applications | grep Xcode

      - name: Show current version of Xcode
        run: xcodebuild -version

      - uses: irgaly/xcode-cache@v1
        with:
          key: xcode-cache-deriveddata-${{ github.workflow }}-${{ github.sha }}
          restore-keys: xcode-cache-deriveddata-${{ github.workflow }}-

      - name: Set up Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.1.app/Contents/Developer
      
      - run: npm install
        working-directory: example
      
      - run: pod install
        working-directory: example/ios
      
      - run: xcodebuild test -workspace reactnativedeviceactivityexample.xcworkspace -scheme Tests -allowProvisioningUpdates -destination "platform=iOS Simulator,OS=latest,name=iPhone 16"
        working-directory: example/ios



      